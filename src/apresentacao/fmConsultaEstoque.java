/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package apresentacao;

import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.TreeSet;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import negocio.Estoque;
import negocio.Funcionario;
import persistencia.EstoqueDAO;
import persistencia.FuncionarioDAO;
import persistencia.IEstoque;
import persistencia.IFuncionario;

/**
 *
 * @author Vinicius
 */
public class fmConsultaEstoque extends javax.swing.JInternalFrame {

    /**
     * Creates new form fmConsultaEstoque
     */
   
    private final EstoqueDAO dao2 = new EstoqueDAO();
    private final FuncionarioDAO dao = new FuncionarioDAO();
    private String nome;

    private Funcionario funcionario = new Funcionario();
    Estoque estoque = new Estoque();

    public void mostrarLista() {
        this.cbFuncionario.removeAllItems();
        List<Funcionario> lista2 = dao.listarTodos();
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        for (Funcionario f : lista2) {
            modelo.addElement(f.getNome());
        }

        this.cbFuncionario.setModel(modelo);
        /////////////////////////////////////////////////////////////////////////////////
        List<Estoque> lista = dao2.listarTodos();
        DefaultTableModel modelo2 = (DefaultTableModel) jTable1.getModel();
        modelo2.setNumRows(0);
        SimpleDateFormat DateFor = new SimpleDateFormat("dd/MM/yyyy");
        for (Estoque pro : lista) {
            String stringDate = DateFor.format(pro.getData_vencimento().getTime());
            funcionario = dao.getByID(pro.getIdFuncionario());
            modelo2.addRow(
                    new Object[]{pro.getIdEstoque().toString(), pro.getCodProduto(),
                        pro.getNomeProduto(), pro.getQuantidade().toString(),
                        stringDate, funcionario.getNome()});
        }
    }

    public boolean verificar(String codigo_produto, String produto, String quantidade, String data_vencimento, String id) {

        if (data_vencimento.isEmpty()) {
            JOptionPane.showConfirmDialog(null, "Campo cpf em branco na linha " + id);
            return false;
        }
        if (quantidade.isEmpty()) {
            JOptionPane.showConfirmDialog(null, "Campo data de cadastro em branco na linha " + id);
            return false;
        }
        if (produto.isEmpty()) {
            JOptionPane.showConfirmDialog(null, "Campo Data de nascimento em branco na linha " + id);
            return false;
        }
        if (codigo_produto.isEmpty()) {
            JOptionPane.showConfirmDialog(null, "Campo Endere√ßo em branco na linha " + id);
            return false;
        }

        return true;
    }

    /**
     *
     * @param gerente
     * @param nome
     */
    public fmConsultaEstoque(String nome) {
        this.nome = nome;
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelImagemLogin21 = new images.PainelImagemLogin2();
        jLabel1 = new javax.swing.JLabel();
        txtIDVenda = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btLimpar = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btSair = new javax.swing.JButton();
        cbFuncionario = new javax.swing.JComboBox<>();

        setTitle("Consulta no Estoque");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        painelImagemLogin21.setImg(new ImageIcon("src/images/imagem_Login.jpg"));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("Produto:");

        txtIDVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIDVendaKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/estoque111.png"))); // NOI18N
        jLabel2.setText("Consulta no Estoque");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Cod_Produto", "Produto", "Quantidade", "Data Vencimento", "Funcionario"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(5).setCellEditor(new javax.swing.DefaultCellEditor(cbFuncionario)
            );
        }

        btLimpar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btLimpar.setForeground(new java.awt.Color(0, 0, 255));
        btLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/file_new_22051.png"))); // NOI18N
        btLimpar.setText("Limpar");
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });

        btSalvar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btSalvar.setForeground(new java.awt.Color(0, 0, 255));
        btSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/save_21411.png"))); // NOI18N
        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btExcluir.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btExcluir.setForeground(new java.awt.Color(0, 0, 255));
        btExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/Button-Red-Cancel-icon.png"))); // NOI18N
        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        btSair.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btSair.setForeground(new java.awt.Color(0, 0, 255));
        btSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/SignOut_icon-icons.com_74704.png"))); // NOI18N
        btSair.setText("Sair");
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelImagemLogin21Layout = new javax.swing.GroupLayout(painelImagemLogin21);
        painelImagemLogin21.setLayout(painelImagemLogin21Layout);
        painelImagemLogin21Layout.setHorizontalGroup(
            painelImagemLogin21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelImagemLogin21Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(40, 40, 40)
                .addComponent(cbFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(180, 180, 180))
            .addGroup(painelImagemLogin21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelImagemLogin21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelImagemLogin21Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtIDVenda))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 725, Short.MAX_VALUE)
                    .addGroup(painelImagemLogin21Layout.createSequentialGroup()
                        .addComponent(btLimpar)
                        .addGap(53, 53, 53)
                        .addComponent(btSalvar)
                        .addGap(51, 51, 51)
                        .addComponent(btExcluir)
                        .addGap(49, 49, 49)
                        .addComponent(btSair)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        painelImagemLogin21Layout.setVerticalGroup(
            painelImagemLogin21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelImagemLogin21Layout.createSequentialGroup()
                .addGroup(painelImagemLogin21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelImagemLogin21Layout.createSequentialGroup()
                        .addContainerGap(19, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(painelImagemLogin21Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(cbFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(painelImagemLogin21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIDVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelImagemLogin21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btLimpar)
                    .addComponent(btSalvar)
                    .addComponent(btExcluir)
                    .addComponent(btSair))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelImagemLogin21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelImagemLogin21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        try {
            int valor = JOptionPane.showConfirmDialog(null, "Tem certeze que deseja salvar?", "Salvar edi√ß√£o", 1);
            if (valor == 0) {
                int tam = jTable1.getRowCount();
                for (int d = 0; d < tam; d++) {
                    String id = (String) jTable1.getValueAt(d, 0);;
                    String codigo_produto = (String) jTable1.getValueAt(d, 1);
                    String produto = (String) jTable1.getValueAt(d, 2);
                    String quantidade = (String) jTable1.getValueAt(d, 3);
                    String data_vencimento = (String) jTable1.getValueAt(d, 4);
                    String funcionarios = (String) jTable1.getValueAt(d, 5);

                    if (verificar(codigo_produto, produto, quantidade, data_vencimento, id)) {
                        List<Funcionario> lista2 = dao.pesquisar(funcionarios.trim());
                        //funcionario
                        try {
                            SimpleDateFormat data = new SimpleDateFormat("dd/MM/yyyy");
                            Calendar cal = Calendar.getInstance();
                            cal.setTime(data.parse(data_vencimento));
                            estoque.setData_vencimento(cal);//4

                        } catch (ParseException ee) {
                            System.out.println(ee);
                        }

                        estoque.setCodProduto(codigo_produto);

                        estoque.setNomeProduto(produto);//6
                        estoque.setQuantidade(Integer.parseInt(quantidade));//
                        estoque.setIdEstoque(Integer.parseInt(id));//8
                        estoque.setIdFuncionario(lista2.get(0).getIdFuncionario());

                        dao2.altera(estoque);
                    } else {
                       JOptionPane.showMessageDialog(null, "Erro em gravar linha "+id);
                        break;
                    }
                }
                JOptionPane.showMessageDialog(null, "Dados ja foram salvos");
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            }
        } catch (HeadlessException r) {

        }
        ((DefaultTableModel) jTable1.getModel()).setRowCount(0);
        mostrarLista();

    }//GEN-LAST:event_btSalvarActionPerformed

    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed
        this.dispose();
    }//GEN-LAST:event_btSairActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        // TODO add your handling code here:
        int selRow = jTable1.getSelectedRow();
        String valor = (String) jTable1.getValueAt(jTable1.getSelectedRow(), 0);

        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        if (jTable1.getSelectedRow() >= 0) {
            dtm.removeRow(jTable1.getSelectedRow());
            jTable1.setModel(dtm);
            //int valor=
            dao2.remove(Integer.parseInt(valor));
        } else {
            JOptionPane.showMessageDialog(null, "Favor selecionar uma linha");
        }
    }//GEN-LAST:event_btExcluirActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:    
        if(nome.equals("Padeiro")||nome.equals("Atendente")){
             jTable1.setEnabled(false);
             this.btExcluir.setVisible(false);
             this.btSalvar.setVisible(false);
             mostrarLista();
        }
        mostrarLista();

        

        
    }//GEN-LAST:event_formInternalFrameOpened

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
        // TODO add your handling code here:
        ((DefaultTableModel) jTable1.getModel()).setRowCount(0);
        mostrarLista();
    }//GEN-LAST:event_btLimparActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

    }//GEN-LAST:event_jTable1MouseClicked

    private void txtIDVendaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDVendaKeyPressed
        // TODO add your handling code here:

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            List<Estoque> pes = dao2.pesquisar(txtIDVenda.getText());
            ((DefaultTableModel) jTable1.getModel()).setRowCount(0);
            DefaultTableModel modelo2 = (DefaultTableModel) jTable1.getModel();
            modelo2.setNumRows(0);
            SimpleDateFormat DateFor = new SimpleDateFormat("dd/MM/yyyy");
            for (Estoque pro : pes) {
                String stringDate = DateFor.format(pro.getData_vencimento().getTime());
                funcionario = dao.getByID(pro.getIdFuncionario());
                modelo2.addRow(
                        new Object[]{pro.getIdEstoque().toString(), pro.getCodProduto(),
                            pro.getNomeProduto(), pro.getQuantidade().toString(),
                            stringDate, funcionario.getNome()});
            }
        }
    }//GEN-LAST:event_txtIDVendaKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btLimpar;
    private javax.swing.JButton btSair;
    private javax.swing.JButton btSalvar;
    private javax.swing.JComboBox<String> cbFuncionario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private images.PainelImagemLogin2 painelImagemLogin21;
    private javax.swing.JTextField txtIDVenda;
    // End of variables declaration//GEN-END:variables
}
